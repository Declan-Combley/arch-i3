#
# ~/.bashrc
#

set -m

number=$(shuf -i 1-6 -n1)

if [ $number -eq 1 ] ; then
   echo "
    ██████╗  █████╗ ████████╗  
   ██╔════╝ ██╔══██╗╚══██╔══╝  
   ██║  ██╗ ██║  ██║   ██║     
   ██║  ╚██╗██║  ██║   ██║     
   ╚██████╔╝╚█████╔╝   ██║     
    ╚═════╝  ╚════╝    ╚═╝     

   ████████╗ █████╗ ██████╗ ██╗  ██╗ █████╗ ████████╗ █████╗ 
   ╚══██╔══╝██╔══██╗██╔══██╗██║  ██║██╔══██╗╚══██╔══╝██╔══██╗
      ██║   ██║  ██║██████╔╝███████║███████║   ██║   ╚═╝███╔╝
      ██║   ██║  ██║██╔═══╝ ██╔══██║██╔══██║   ██║      ╚══╝ 
      ██║   ╚█████╔╝██║     ██║  ██║██║  ██║   ██║      ██╗  
      ╚═╝    ╚════╝ ╚═╝     ╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝      ╚═╝" 
elif [ $number -eq 2 ] ; then
    echo "
    ██████╗  █████╗    █████╗
    ██╔══██╗██╔══██╗  ██╔══██╗
    ██║  ██║██║  ██║  ███████║
    ██║  ██║██║  ██║  ██╔══██║
    ██████╔╝╚█████╔╝  ██║  ██║
    ╚═════╝  ╚════╝   ╚═╝  ╚═╝

    ██████╗  █████╗  █████╗ ██╗  ██╗███████╗██╗     ██╗██████╗ 
    ██╔══██╗██╔══██╗██╔══██╗██║ ██╔╝██╔════╝██║     ██║██╔══██╗
    ██████╦╝███████║██║  ╚═╝█████═╝ █████╗  ██║     ██║██████╔╝
    ██╔══██╗██╔══██║██║  ██╗██╔═██╗ ██╔══╝  ██║     ██║██╔═══╝ 
    ██████╦╝██║  ██║╚█████╔╝██║ ╚██╗██║     ███████╗██║██║     
    ╚═════╝ ╚═╝  ╚═╝ ╚════╝ ╚═╝  ╚═╝╚═╝     ╚══════╝╚═╝╚═╝    TM"    
elif [ $number -eq 3 ] ;then 
   echo " 
     █████╗ ███╗   ███╗ █████╗  ██████╗ ██╗   ██╗ ██████╗
    ██╔══██╗████╗ ████║██╔══██╗██╔════╝ ██║   ██║██╔════╝
    ███████║██╔████╔██║██║  ██║██║  ██╗ ██║   ██║╚█████╗ 
    ██╔══██║██║╚██╔╝██║██║  ██║██║  ╚██╗██║   ██║ ╚═══██╗
    ██║  ██║██║ ╚═╝ ██║╚█████╔╝╚██████╔╝╚██████╔╝██████╔╝
    ╚═╝  ╚═╝╚═╝     ╚═╝ ╚════╝  ╚═════╝  ╚═════╝ ╚═════╝ "
elif [ $number -eq 4 ] ; then
    echo "
         ┌───────┐    
        ┌┘███████└┐   
       ┌┘████┌────┴┐  
     ┌─┤████┌┘█████└┐ 
    ┌┘█│████│███████│ 
    │██│████└┐█████┌┘ 
    │██│█████└─────┤  
    │██│███████████└┐ 
    └┐█│████████████│ 
     └─│█████┌──┐███│ 
       └┐████│  └───┘ 
        └────┘        "
elif [ $number -eq 5 ] ; then
    echo "
     █████╗ ██████╗  █████╗ ██╗  ██╗  ██████╗ ████████╗ ██╗       ██╗
    ██╔══██╗██╔══██╗██╔══██╗██║  ██║  ██╔══██╗╚══██╔══╝ ██║  ██╗  ██║
    ███████║██████╔╝██║  ╚═╝███████║  ██████╦╝   ██║    ╚██╗████╗██╔╝
    ██╔══██║██╔══██╗██║  ██╗██╔══██║  ██╔══██╗   ██║     ████╔═████║ 
    ██║  ██║██║  ██║╚█████╔╝██║  ██║  ██████╦╝   ██║     ╚██╔╝ ╚██╔╝ 
    ╚═╝  ╚═╝╚═╝  ╚═╝ ╚════╝ ╚═╝  ╚═╝  ╚═════╝    ╚═╝      ╚═╝   ╚═╝ " 
elif [ $number -eq 6 ] ; then
    echo "
    ██╗████████╗██╗ ██████╗
    ██║╚══██╔══╝╚█║██╔════╝
    ██║   ██║    ╚╝╚█████╗ 
    ██║   ██║       ╚═══██╗
    ██║   ██║      ██████╔╝
    ╚═╝   ╚═╝      ╚═════╝ 
    ███╗   ███╗ █████╗ ██████╗ ██████╗ ██╗███╗  ██╗  
    ████╗ ████║██╔══██╗██╔══██╗██╔══██╗██║████╗ ██║  
    ██╔████╔██║██║  ██║██████╔╝██████╦╝██║██╔██╗██║  
    ██║╚██╔╝██║██║  ██║██╔══██╗██╔══██╗██║██║╚████║  
    ██║ ╚═╝ ██║╚█████╔╝██║  ██║██████╦╝██║██║ ╚███║  
    ╚═╝     ╚═╝ ╚════╝ ╚═╝  ╚═╝╚═════╝ ╚═╝╚═╝  ╚══╝  
    ████████╗██╗███╗   ███╗███████╗
    ╚══██╔══╝██║████╗ ████║██╔════╝
       ██║   ██║██╔████╔██║█████╗  
       ██║   ██║██║╚██╔╝██║██╔══╝  
       ██║   ██║██║ ╚═╝ ██║███████╗
       ╚═╝   ╚═╝╚═╝     ╚═╝╚══════╝
    "
fi

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

alias ls='ls --color=auto'
alias la='ls -la --color=auto'
alias off='shutdown now'
alias bat='cat /sys/class/power_supply/BAT1/capacity'
alias start-fans='sudo ~/.dotfiles/scripts/asus-fans.sh'
alias stop-fans='sudo ~/.dotfiles/scripts/asus-fans-off.sh'
alias stress-test='stress -c 8 -t 30 -i 1 -m 1'
alias mdlatex='(cd ~/Programming/mdlatex/ && make) && ~/Programming/mdlatex/ml'
alias clean-latex='rm -rf *.tex *.log *.aux *.pdf'

export PS1="[ \[$(tput sgr0)\]\[\033[38;5;215m\]\w\[$(tput sgr0)\] ] \[$(tput sgr0)\]\[\033[38;5;215m\]>>>\[$(tput sgr0)\] \[$(tput sgr0)\]"

[ -f "/home/declan/.ghcup/env" ] && source "/home/declan/.ghcup/env" # ghcup-env
